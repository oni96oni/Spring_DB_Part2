데이터 접근 기술 - Querydsl
    Querydsl 소개 1 - 기존 방식의 문제점

        sql이 클래스처럼 타입이 있고 자바 코드로 작성 할 수 있다면?
        -> type-safe : 컴파일시 에러 체크 가능 해진다.

        이런것을 QueryDSL이 자바로 type-safe하게 개발할 수 있게 지원하게 해주는 프레임워크이다.

        JPQL 장점 : SQL QUERY와 비슷
            단점: 문자로 작성되어서 컴파일 시점에 오류를 찾기 어렵다.

        Criteria API :  자바코드로 JPQL을 작성할 수 있게 해주는 API
            단점 : 복잡하고 너무 어렵다.

        그래서 위의것들은 안된다 -> querydsl등장

    Querydsl 소개 2 - 해결

        DSL : Domain Specific Language
            특정 도메인에 특화된 언어

        쿼리 조회하는 것을 추상화 해놓은것! (JPA, SQL, JAVA Collections, MongoDB 등등)
        위의 예시같은 기술들을 위해 type-safe SQL을 만드는 프레임워크

        APT : Annotation Processing Tool
            컴파일 시점에 특정 코드(SQL 쿼리)를 생성해주는 기술

        SpringDataJpa는 조회가 약점 -> Querydsl로 해결
        단순한 경우 -> SpringDataJpa
        복잡한 경우 -> Querydsl

    Querydsl 설정
        gradle과 IntelliJ 설정이 다르다.

        Q타입 생성을 확인 해야한다.

    Querydsl 적용
        쿼리조건을 모듈화 가능!

        컴파일에서 잘못 작성한것을 체크해준다!

        별도의 스프링 예외 추상화를 지원 x -> JPA 예외를 그대로 사용한다.
        즉, @Repository에서 스프링 예외 추상화를 처리 해준다.

    정리
        동적쿼리 깔끔하게 사용가능!
        메서드 추출로 만든 코드를 재사용 가능!

        결국 JPQL을 만들어주는 빌드역할!
        JPA학습이 핵심

