데이터 접근 기술 - JPA
    JPA 시작

    ORM 개념 1 - SQL 중심적인 개발의 문제점
        애플리케이션은 객체
        데이터는 관계형 데이터베이스에

        자바객체 <-> SQL 을 무한 반복하게 된다.
        SQL에 의존적인 개발을 피하기 어렵다.

        RDBSM에 객체를 저장할때 객체를 SQL로 변환해야 한다. 개발자가 SQL 매퍼 역할을 해준다.
        상속, 연관관계, 데이터 타입, 데이터 식별방법 등에서 객체와 RDBMS의 차이가 발생한다.

        어떤 객체 저장시 일단 객체를 분해해야한다. 객체를 분해하면서 객체 그래프를 탐색하게 된다.

        엔티티 신뢰 문제, 객체 그래프 탐색 문제, 상속 문제, 연관관계 문제, 데이터 타입 문제, 데이터 식별 문제 등이 발생한다.

        물리적으로는 계층 분할이 되어있지만 진정한 의미의 계층 분할이 어렵다.

        객체를 자바 컬렉션에 저장 하듯이 db에 저장할 수는 없을까???
        JPA등장!

    ORM 개념 2 - JPA 소개
        기술 표준 - 표준안(인터페이스)
        ORM : Object Relational Mapping(객체 관계 매핑)
        객체랑 관계형 데이터베이스를 어떻게 매핑할것인가???

        ORM 프레임워크가 매핑역할을 해주는것!
        패러다임의 불일치를 해결!!!
            JPA와 상속, 연관관계, 객체 그래프 탐색,

        왜 JPA를 사용해야 하는가?
            SQL 중심적인 개발에서 객체 중심으로 개발
            생산성
            유지보수
            패러다임의 불일치
            성능
            데이터 접근 추상화와 벤더 독립성

        두가지를 잇는 하나의 계층에서는 캐시와 버퍼(버퍼링 write)관련되서 기능을 제공할 수 있다.

        지연로딩, 즉시로딩

    JPA 설정
