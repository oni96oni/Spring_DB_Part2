데이터 접근 기술 - 활용 방안
    스프링 데이터 JPA 예제와 트레이드 오프
        구조를 맞추기 위해서 어댑터가 들어가면서 복잡해지고 사용하는 클래스도 많아지는 단점 발생 ???
        지금은 DI, OCP 원칙을 지킬 수 있는 장점이 있음

        DI, OCP 원칙을 포기하고 복잡한 어댑터를 제거하고 구조를 단순하게 가져가는 방법

        구조의 안정성 VS 개발의 편의성

    실용적인 구조
        스프링 데이터 JPA의 기능은 최대한 살리면서, QueryDSL도 편리하게 사용할 수 있는 구조를 만들어보자

        spring data jpa 로 간단한거 해결! 복잡한것은 querydsl 로 해결!

    다양한 데이터 접근 기술 조합

        MyBatis와 jpa를 동시에 사용할경우 트랜잭션 매니저는 어떤것을 써야할까???
        JpaTransactionManager를 선택하면 된다! (JpaTransactionManager는 Jpa와 MyBatis를 모두 지원한다)
        JPA라는 기술도 결국 내부에서 DataSource와 JDBC 커넥션을 사용하기 때문에 함께 사용 가능하다!

        JPA와 JdbcTemplate을 함께 사용하면 JPA의 플러시 타이밍에 주의해야한다!!!
        jpa는 커밋되는 시점에서 변경사항을 db에 반영한다.

        결론 : JpaTransactionManager를 사용해서 여러 데이터 접근 기술들을 함께 사용할 수 있다.

    정리
        다양한 데이터 접근 기술에 따른 트레이드 오프를 고민하자!