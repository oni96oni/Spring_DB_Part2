데이터 접근 기술 - 시작
    프로젝트 구조 설명1 - 기본
        DTO란?
            데이터 전송객체로써 기능은 없고 데이터를 전달하는 용도로 사용되는 객체

        구현체를 쉽게 변경하기위해 인터페이스를 사용한다.

        DTO는 같은 repository 패키지에 두는것이 일단 바람직하다. 의존관계상 인터페이스에서 dto를 의존하고있기 때문
        물론 그때그때 상황마다 다 다르다!

    프로젝트 구조 설명2 - 설정
        @EventListener(ApplicationReadyEvent.class)는 스프링이 aop까지 다 끝내고 실행했을때
        이벤트를 실행시키는 어노테이션이다.

        @Import(MemoryConfig.class)는 MemoryConfig를 가져와서 사용하겠다는 어노테이션이다.

        @SpringBootApplication(scanBasePackages = "hello.itemservice.web")는 스캔할 패키지를 지정해주는 어노테이션이다.
        지정해준 범위의 하위만 컴포너트스캔을 진행하고 나머지는 수동으로 빈지정을 해준다.

        @Profile은 프로파일을 지정해주는 어노테이션이다. 프로파일은 개발환경에 따라서 다르게 동작하게 할때 사용한다.
        예를들어 개발환경에서는 메모리에 저장하고 운영환경에서는 DB에 저장하고 싶을때 사용한다.
        resources/application.properties에서 확인가능

        스프링 프로필기능 정확한 이해 더 필요!!!
        테스트 할때는 테스트 프로필, 로컬에서 확인할때는 로컬 프로필로 사용한다.

    프로젝트 구조 설명3 - 테스트
        항상 테스트는 끝낸후 데이터 정리를 통해서 다음 테스트에 영향을 주지 않도록 해야한다.

        여기서는 구현체를 테스트하는 것이 아니라 인터페이스를 테스트한다!
        이러면 향후에 다른 구현체로 변경했을때에도 해당 구현체가 잘 동작하는지 같은 테스트로 검증가능!

        테스트에도 추상화? 다형성이 적용되는 것 같다.

    데이터베이스 테이블 생성
        h2 : identity 전략
        MySQL : auto_increment 전략
        Oracle : sequence 전략
        db가 순서대로 증가하는 값을 넣어주는것

        db 기본키는 3가지 조건을 만족해야 한다.
        1. null 값 x
        2. 유일해야 한다.
        3. 변해선 안된다.

        테이블의 기본 키를 선택하는 전략은 2가지가 있다
        1. 자연키(natural key) : 비즈니스상의 의미를 가진 키 (ex. 회원의 주민번호)
        2. 대리키(surrogate key) : 비즈니스상의 의미가 없는 키, 대체키 (ex. Oracle의 Sequence, MySQL의 auto_increment 같은)

        ★★자연 키보다는 대리 키를 권장!!!
        비즈니스 환경은 언젠가 변경될 수 있기 때문이다.

    정리
